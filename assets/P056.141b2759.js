const e="056",t="Synchronous pattern",o="",n="When in your business logic, the model inference is a blocker to proceed to the next step",s="blocks the system's workflow until the prediction finishes",c=`Easy to manage with its simplicity. All operational aspects like transaction tracing, monitoring etc become easy as well. Service workflow becomes simple for the process won't proceed until the prediction completes.
But: (1) The prediction latency can become a performance bottleneck.
(2) You might have to consider a workaround for not degrading your user experience because of prediction latency. (3) If the client of your service is another service then this pattern leads to blocked threads on the client side.`,i="https://github.com/shibuiwilliam/ml-system-in-actions/tree/main/chapter4_serving_patterns/synchronous_pattern",r=["Asynchronous Pattern"],a=["Deployment","Architecture"],l=["124"],h={id:e,name:t,aka:o,motivation:n,solution:s,consequences:c,examples:i,related:r,categories:a,resources:l};export{o as aka,a as categories,c as consequences,h as default,i as examples,e as id,n as motivation,t as name,r as related,l as resources,s as solution};
